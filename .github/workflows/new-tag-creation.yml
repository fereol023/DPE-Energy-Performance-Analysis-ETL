name: Create tag 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Extract latest tag
        id: extract-latest-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "$LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG"
          echo "LATEST_TAG=${LATEST_TAG}"
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV
          ls
          echo "the latest tag is $LATEST_TAG"

      - name: Tuto Set environment variable
        run: echo "MY_ENV_VAR=myValue" >> $GITHUB_ENV

      - name: Tuto Use environment variable
        run: echo "The value of MY_ENV_VAR is $MY_ENV_VAR"

      - name: Tuto Set color 
        id: color-selector
        run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
        
      - name: Tuto Get color
        env:
          SELECTED_COLOR: ${{ steps.color-selector.outputs.SELECTED_COLOR }}
        run: echo "The selected color is $SELECTED_COLOR"
          
      - name: Extract major and minor version from latest tag
        id: extract-and-set-minor-and-major-versions
        run: |
          MAJOR_VERSION=$(echo "$LATEST_TAG"| cut -d'.' -f1)
          MINOR_VERSION=$(echo "$LATEST_TAG"| cut -d'.' -f2)
          echo "MAJOR_VERSION=${MAJOR_VERSION}" >> $GITHUB_OUTPUT
          echo "MINOR_VERSION=${MINOR_VERSION}" >> $GITHUB_OUTPUT
          echo "MAJOR_VERSION=${MAJOR_VERSION}"
          echo "MINOR_VERSION=${MINOR_VERSION}"
          
      - name: Check branch name and commit message
        id: check-branch-and-message
        run: |
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          COMMIT_MESSAGE=$(git log -1 --format=%B)
          if [[ ${BRANCH_NAME} == main ]]; then
            if echo "${COMMIT_MESSAGE}" | grep -q 'final'; then
              TAG_SUFFIX=""
              MINOR_VERSION=$(( ${{ steps.extract-and-set-minor-and-major-versions.outputs.MINOR_VERSION }} + 1 ))
              echo "The new tag ends with ${MINOR_VERSION} and ${TAG_SUFFIX}"
            else
              LAST_RC_TAG=$(git describe --tags --match '*rc-*' --abbrev=0)
              if [[ ${LAST_RC_TAG} ]]; then
                RC_NUM=$(echo ${LAST_RC_TAG##*-rc-} | cut -d'-' -f1)  # Extract the current RC number
                echo "Current RC Number: $RC_NUM"  # Echo the current RC number
                RC_NUM=$((RC_NUM + 1))  # Increment the RC number by 1
                echo "Incremented RC Number: $RC_NUM"  # Echo the incremented RC number
                TAG_SUFFIX="rc-${RC_NUM}"
                MINOR_VERSION=$(( ${{ steps.extract-and-set-minor-and-major-versions.outputs.MINOR_VERSION }} ))
                echo "The new tag ends with ${MINOR_VERSION} and ${TAG_SUFFIX}"
              else
                TAG_SUFFIX="rc-0"
                MINOR_VERSION=$(( ${{ steps.extract-and-set-minor-and-major-versions.outputs.MINOR_VERSION }} ))
              fi
            fi
          else
            TAG_SUFFIX="rc-${GITHUB_RUN_ID:0:3}"
            MINOR_VERSION=$(( ${{ steps.extract-and-set-minor-and-major-versions.outputs.MINOR_VERSION }} ))
          fi
          echo "tag_suffix=${TAG_SUFFIX}" >> $GITHUB_OUTPUT
          echo "MINOR_VERSION=${MINOR_VERSION}" >> $GITHUB_OUTPUT

      - name: Create tag
        id: tag-creation
        env:
          MAJOR: ${{ steps.extract-and-set-minor-and-major-versions.outputs.MAJOR_VERSION }}
          MINOR: ${{ steps.check-branch-and-message.outputs.MINOR_VERSION }}
        run: |
          echo "the major version is $MAJOR and the minor is $MINOR"
          NEW_TAG="$MAJOR.$MINOR.${{ steps.check-branch-and-message.outputs.tag_suffix }}"
          echo ${NEW_TAG}
          echo "NEW_TAG=${NEW_TAG}" >> "$GITHUB_OUTPUT"
          git tag ${NEW_TAG}
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git ${NEW_TAG}
          
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          LATEST_TAG=$(git describe --tags --abbrev=0)
          TAG_NAME="${REPO_NAME}-${LATEST_TAG}-$(date +%s)"
          echo "${TAG_NAME}"
